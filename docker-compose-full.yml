version: '3.8'

services:
  # Main HVAC CRM/ERP application
  streamlit:
    build: .
    container_name: hvac_crm_erp_app
    restart: always
    ports:
      - "8501:8501"
    volumes:
      - ./app_data:/app/data
    env_file:
      - .env
    networks:
      - hvac_network
    depends_on:
      - postgres
      - redis
      - minio

  # n8n workflow automation
  n8n:
    image: n8nio/n8n:latest
    container_name: hvac_n8n
    restart: always
    ports:
      - "5678:5678"
    environment:
      - N8N_PORT=5678
      - N8N_PROTOCOL=http
      - N8N_HOST=localhost
      - N8N_EDITOR_BASE_URL=http://localhost:5678
      - NODE_ENV=production
      - WEBHOOK_URL=http://localhost:5678/
      - GENERIC_TIMEZONE=UTC
      - DB_TYPE=postgresdb
      - DB_POSTGRESDB_HOST=postgres
      - DB_POSTGRESDB_PORT=5432
      - DB_POSTGRESDB_DATABASE=${DB_NAME}
      - DB_POSTGRESDB_USER=${DB_USER}
      - DB_POSTGRESDB_PASSWORD=${DB_PASSWORD}
      - N8N_ENCRYPTION_KEY=${ENCRYPTION_KEY}
    volumes:
      - ./n8n_data:/home/node/.n8n
    networks:
      - hvac_network
    depends_on:
      - postgres

  # Mastra AI agent framework
  mastra:
    build:
      context: ./mastra
      dockerfile: Dockerfile.mastra
    container_name: hvac_mastra
    restart: always
    ports:
      - "3000:3000"
    environment:
      - PORT=3000
      - NODE_ENV=production
      - DATABASE_URL=postgresql://${DB_USER}:${DB_PASSWORD}@postgres:5432/${DB_NAME}
    volumes:
      - ./mastra_data:/app/data
    networks:
      - hvac_network
    depends_on:
      - postgres

  # Maxun web data extraction
  maxun:
    build:
      context: ./maxun
      dockerfile: Dockerfile.maxun
    container_name: hvac_maxun
    restart: always
    ports:
      - "5173:5173"
      - "8080:8080"
    environment:
      - BACKEND_PORT=8080
      - FRONTEND_PORT=5173
      - BACKEND_URL=http://localhost:8080
      - VITE_BACKEND_URL=http://localhost:8080
      - PUBLIC_URL=http://localhost:5173
      - VITE_PUBLIC_URL=http://localhost:5173
      - JWT_SECRET=${JWT_SECRET}
      - DB_NAME=${DB_NAME}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_HOST=postgres
      - DB_PORT=5432
      - ENCRYPTION_KEY=${ENCRYPTION_KEY}
      - MINIO_ENDPOINT=minio
      - MINIO_PORT=9000
      - MINIO_ACCESS_KEY=${MINIO_ACCESS_KEY}
      - MINIO_SECRET_KEY=${MINIO_SECRET_KEY}
      - SKIP_DB_CHECK=true
    volumes:
      - ./maxun_data:/app/data
    networks:
      - hvac_network
    depends_on:
      - postgres
      - minio

  # PostgreSQL database
  postgres:
    image: postgres:14-alpine
    container_name: hvac_postgres
    restart: always
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_DB=${DB_NAME}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - hvac_network

  # Redis for caching
  redis:
    image: redis:alpine
    container_name: hvac_redis
    restart: always
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - hvac_network

  # MinIO for object storage
  minio:
    image: minio/minio
    container_name: hvac_minio
    restart: always
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      - MINIO_ROOT_USER=${MINIO_ACCESS_KEY}
      - MINIO_ROOT_PASSWORD=${MINIO_SECRET_KEY}
    volumes:
      - minio_data:/data
    command: server /data --console-address ":9001"
    networks:
      - hvac_network

  # Nginx web server
  nginx:
    image: nginx:alpine
    container_name: hvac_nginx
    restart: always
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf
      - ./nginx/ssl:/etc/nginx/ssl
      - ./nginx/logs:/var/log/nginx
    depends_on:
      - streamlit
      - n8n
      - mastra
      - maxun
    networks:
      - hvac_network

networks:
  hvac_network:
    driver: bridge

volumes:
  postgres_data:
  redis_data:
  minio_data:
